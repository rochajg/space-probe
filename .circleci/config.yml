# Java Gradle CircleCI 2.0 configuration file
# See: https://circleci.com/docs/2.0/language-java/
version: 2.1

orbs:
  codecov: codecov/codecov@3.1.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      # specify the version you desire here
      - image: cimg/openjdk:11.0

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle.kts" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # Install dependencies
      - run:
          name: "Dependencies Install"
          command: ./gradlew dependencies

      # Save new dependencies in cache (if present)
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle.kts" }}

      # Run Linter
      - run:
          name: "Running Linter"
          command: ./gradlew ktlintCheck --daemon

      # Run Tests!
      - run:
          name: "Running Tests"
          command: ./gradlew test

      # Generate JaCoCo report
      - run:
          name: "Generating Tests Report"
          command: ./gradlew koverXmlReport

      # Upload coverages metrics to CodeCov
      - codecov/upload:
          file: './build/reports/kover/xml/report.xml'

# Workflows allow you to define the order of execution of jobs.
# For a single job, like in this example, the workflows section can be omitted
# Learn [more about workflows](https://circleci.com/docs/2.0/concepts/#section=getting-started){:target="_blank"}
workflows:
  # The workflow version
  version: 2
  # A unique name for the workflow
  build:
    # The jobs to run in this workflow
    jobs:
      - build:
          name: 'Build and run lint and tests'
